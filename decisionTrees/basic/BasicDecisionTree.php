<?php

use FHV\Bundle\TmdBundle\DecisionTree\Model\Result;
use FHV\Bundle\TmdBundle\DecisionTree\Model\Decision;
use FHV\Bundle\TmdBundle\DecisionTree\Model\Node;
use FHV\Bundle\TmdBundle\DecisionTree\Model\Tree;
use FHV\Bundle\TmdBundle\Model\Feature;
use FHV\Bundle\TmdBundle\DecisionTree\DecisionTreeInterface;

/**
 * DO NOT EDIT - This class is autogenerated by the the decission tree manager
 * Class BasicDecisionTree
 * @package FHV\Bundle\TmdBundle\DecisionTree
 */
class BasicDecisionTree implements DecisionTreeInterface
{
    protected $tree;

    function __construct()
    {
                    $node0 = new Node();
                    $node0->setDecision(new Decision('meanvelocity', '>', 20.83));
                                    $node1 = new Node();
                            $node1->setResult(new Result(0,0,0,0,5));
                            $node2 = new Node();
                    $node2->setDecision(new Decision('meanvelocity', '>', 2.041));
                                    $node3 = new Node();
                    $node3->setDecision(new Decision('meanvelocity', '>', 7.837));
                                    $node4 = new Node();
                    $node4->setDecision(new Decision('meanvelocity', '>', 8.772));
                                    $node5 = new Node();
                            $node5->setResult(new Result(0,0,46,1,2));
                            $node6 = new Node();
                    $node6->setDecision(new Decision('meanacceleration', '>', 2.728));
                                    $node7 = new Node();
                            $node7->setResult(new Result(0,0,0,2,0));
                            $node8 = new Node();
                            $node8->setResult(new Result(0,0,3,0,0));
                            $node9 = new Node();
                    $node9->setDecision(new Decision('meanacceleration', '>', 2.501));
                                    $node10 = new Node();
                            $node10->setResult(new Result(0,0,0,2,0));
                            $node11 = new Node();
                    $node11->setDecision(new Decision('meanvelocity', '>', 6.224));
                                    $node12 = new Node();
                    $node12->setDecision(new Decision('stoprate', '>', 0));
                                    $node13 = new Node();
                    $node13->setDecision(new Decision('maxvelocity', '>', 11.986));
                                    $node14 = new Node();
                    $node14->setDecision(new Decision('maxvelocity', '>', 14.998));
                                    $node15 = new Node();
                            $node15->setResult(new Result(0,0,0,5,0));
                            $node16 = new Node();
                            $node16->setResult(new Result(1,3,0,0,0));
                            $node17 = new Node();
                            $node17->setResult(new Result(2,0,0,0,0));
                            $node18 = new Node();
                            $node18->setResult(new Result(6,0,0,0,0));
                            $node19 = new Node();
                    $node19->setDecision(new Decision('maxacceleration', '>', 15.284));
                                    $node20 = new Node();
                            $node20->setResult(new Result(1,0,2,0,0));
                            $node21 = new Node();
                    $node21->setDecision(new Decision('meanvelocity', '>', 4.395));
                                    $node22 = new Node();
                            $node22->setResult(new Result(9,0,0,0,0));
                            $node23 = new Node();
                    $node23->setDecision(new Decision('meanvelocity', '>', 4.318));
                                    $node24 = new Node();
                            $node24->setResult(new Result(0,0,2,0,0));
                            $node25 = new Node();
                    $node25->setDecision(new Decision('maxacceleration', '>', 3.872));
                                    $node26 = new Node();
                            $node26->setResult(new Result(10,0,0,0,0));
                            $node27 = new Node();
                    $node27->setDecision(new Decision('meanacceleration', '>', 0.914));
                                    $node28 = new Node();
                            $node28->setResult(new Result(0,0,2,0,0));
                            $node29 = new Node();
                            $node29->setResult(new Result(3,0,0,0,0));
                            $node30 = new Node();
                    $node30->setDecision(new Decision('maxvelocity', '>', 47.534));
                                    $node31 = new Node();
                            $node31->setResult(new Result(2,0,0,0,0));
                            $node32 = new Node();
                    $node32->setDecision(new Decision('stoprate', '>', 0.136));
                                    $node33 = new Node();
                    $node33->setDecision(new Decision('stoprate', '>', 0.191));
                                    $node34 = new Node();
                            $node34->setResult(new Result(0,2,0,0,0));
                            $node35 = new Node();
                            $node35->setResult(new Result(2,0,0,0,0));
                            $node36 = new Node();
                    $node36->setDecision(new Decision('meanvelocity', '>', 1.927));
                                    $node37 = new Node();
                            $node37->setResult(new Result(1,1,0,0,0));
                            $node38 = new Node();
                            $node38->setResult(new Result(1,49,1,0,0));
                
                                    $node0->setLeft($node1);
                            $node0->setRight($node2);
                                    $node1->setParent($node1);
                                                    $node2->setParent($node0);
                            $node2->setLeft($node3);
                            $node2->setRight($node30);
                                    $node3->setParent($node2);
                            $node3->setLeft($node4);
                            $node3->setRight($node9);
                                    $node4->setParent($node3);
                            $node4->setLeft($node5);
                            $node4->setRight($node6);
                                    $node5->setParent($node5);
                                                    $node6->setParent($node4);
                            $node6->setLeft($node7);
                            $node6->setRight($node8);
                                    $node7->setParent($node7);
                                                    $node8->setParent($node8);
                                                    $node9->setParent($node3);
                            $node9->setLeft($node10);
                            $node9->setRight($node11);
                                    $node10->setParent($node10);
                                                    $node11->setParent($node9);
                            $node11->setLeft($node12);
                            $node11->setRight($node19);
                                    $node12->setParent($node11);
                            $node12->setLeft($node13);
                            $node12->setRight($node18);
                                    $node13->setParent($node12);
                            $node13->setLeft($node14);
                            $node13->setRight($node17);
                                    $node14->setParent($node13);
                            $node14->setLeft($node15);
                            $node14->setRight($node16);
                                    $node15->setParent($node15);
                                                    $node16->setParent($node16);
                                                    $node17->setParent($node17);
                                                    $node18->setParent($node18);
                                                    $node19->setParent($node11);
                            $node19->setLeft($node20);
                            $node19->setRight($node21);
                                    $node20->setParent($node20);
                                                    $node21->setParent($node19);
                            $node21->setLeft($node22);
                            $node21->setRight($node23);
                                    $node22->setParent($node22);
                                                    $node23->setParent($node21);
                            $node23->setLeft($node24);
                            $node23->setRight($node25);
                                    $node24->setParent($node24);
                                                    $node25->setParent($node23);
                            $node25->setLeft($node26);
                            $node25->setRight($node27);
                                    $node26->setParent($node26);
                                                    $node27->setParent($node25);
                            $node27->setLeft($node28);
                            $node27->setRight($node29);
                                    $node28->setParent($node28);
                                                    $node29->setParent($node29);
                                                    $node30->setParent($node2);
                            $node30->setLeft($node31);
                            $node30->setRight($node32);
                                    $node31->setParent($node31);
                                                    $node32->setParent($node30);
                            $node32->setLeft($node33);
                            $node32->setRight($node36);
                                    $node33->setParent($node32);
                            $node33->setLeft($node34);
                            $node33->setRight($node35);
                                    $node34->setParent($node34);
                                                    $node35->setParent($node35);
                                                    $node36->setParent($node32);
                            $node36->setLeft($node37);
                            $node36->setRight($node38);
                                    $node37->setParent($node37);
                                                    $node38->setParent($node38);
                                
        $this->tree = new Tree($node0);
    }

    /**
    * Process values by tree
    *
    * @param array $values
    *
    * @return array
    */
    public function process(array $values)
    {
        return $this->tree->process($values);
    }
}
