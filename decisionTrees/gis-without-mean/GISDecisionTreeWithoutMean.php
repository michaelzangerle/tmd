<?php

use FHV\Bundle\TmdBundle\DecisionTree\Model\Result;
use FHV\Bundle\TmdBundle\DecisionTree\Model\Decision;
use FHV\Bundle\TmdBundle\DecisionTree\Model\Node;
use FHV\Bundle\TmdBundle\DecisionTree\Model\Tree;
use FHV\Bundle\TmdBundle\Model\Feature;
use FHV\Bundle\TmdBundle\DecisionTree\DecisionTreeInterface;

/**
 * DO NOT EDIT - This class is autogenerated by the the decission tree manager
 * Class GISDecisionTreeWithoutMean
 * @package FHV\Bundle\TmdBundle\DecisionTree
 */
class GISDecisionTreeWithoutMean implements DecisionTreeInterface
{
    protected $tree;

    function __construct()
    {
                    $node0 = new Node();
                    $node0->setDecision(new Decision('meanvelocity', '>', 2.044));
                                    $node1 = new Node();
                    $node1->setDecision(new Decision('meanvelocity', '>', 7.887));
                                    $node2 = new Node();
                    $node2->setDecision(new Decision('railcloseness', '>', 0.012));
                                    $node3 = new Node();
                            $node3->setResult(new Result([
                            'bike' => 0,
                            'drive' => 0,
                            'walk' => 0,
                            'bus' => 0,
                            'train' => 8,
                        ]));
                            $node4 = new Node();
                    $node4->setDecision(new Decision('ptscloseness', '>', 1.5));
                                    $node5 = new Node();
                    $node5->setDecision(new Decision('ptscloseness', '>', 20.5));
                                    $node6 = new Node();
                    $node6->setDecision(new Decision('railcloseness', '>', 0));
                                    $node7 = new Node();
                            $node7->setResult(new Result([
                            'bike' => 0,
                            'drive' => 1,
                            'walk' => 0,
                            'bus' => 1,
                            'train' => 0,
                        ]));
                            $node8 = new Node();
                            $node8->setResult(new Result([
                            'bike' => 0,
                            'drive' => 0,
                            'walk' => 0,
                            'bus' => 2,
                            'train' => 0,
                        ]));
                            $node9 = new Node();
                            $node9->setResult(new Result([
                            'bus' => 2,
                            'drive' => 12,
                            'walk' => 0,
                            'bike' => 0,
                            'train' => 0,
                        ]));
                            $node10 = new Node();
                            $node10->setResult(new Result([
                            'bike' => 0,
                            'drive' => 48,
                            'walk' => 0,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node11 = new Node();
                    $node11->setDecision(new Decision('ptscloseness', '>', 2.5));
                                    $node12 = new Node();
                    $node12->setDecision(new Decision('meanvelocity', '>', 6.368));
                                    $node13 = new Node();
                    $node13->setDecision(new Decision('highwaycloseness', '>', 0));
                                    $node14 = new Node();
                            $node14->setResult(new Result([
                            'bike' => 2,
                            'drive' => 0,
                            'walk' => 0,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node15 = new Node();
                            $node15->setResult(new Result([
                            'bike' => 0,
                            'drive' => 0,
                            'walk' => 0,
                            'bus' => 9,
                            'train' => 0,
                        ]));
                            $node16 = new Node();
                            $node16->setResult(new Result([
                            'bike' => 11,
                            'drive' => 0,
                            'walk' => 0,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node17 = new Node();
                    $node17->setDecision(new Decision('railcloseness', '>', 0));
                                    $node18 = new Node();
                            $node18->setResult(new Result([
                            'bike' => 8,
                            'drive' => 0,
                            'walk' => 0,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node19 = new Node();
                    $node19->setDecision(new Decision('meanacceleration', '>', 0.866));
                                    $node20 = new Node();
                    $node20->setDecision(new Decision('highwaycloseness', '>', 0.001));
                                    $node21 = new Node();
                            $node21->setResult(new Result([
                            'bike' => 4,
                            'drive' => 0,
                            'walk' => 0,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node22 = new Node();
                    $node22->setDecision(new Decision('meanvelocity', '>', 6.07));
                                    $node23 = new Node();
                            $node23->setResult(new Result([
                            'bus' => 1,
                            'drive' => 3,
                            'walk' => 0,
                            'bike' => 0,
                            'train' => 0,
                        ]));
                            $node24 = new Node();
                    $node24->setDecision(new Decision('stoprate', '>', 0.005));
                                    $node25 = new Node();
                            $node25->setResult(new Result([
                            'bike' => 0,
                            'drive' => 3,
                            'walk' => 0,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node26 = new Node();
                    $node26->setDecision(new Decision('meanacceleration', '>', 1.119));
                                    $node27 = new Node();
                    $node27->setDecision(new Decision('maxvelocity', '>', 30.207));
                                    $node28 = new Node();
                            $node28->setResult(new Result([
                            'bike' => 0,
                            'drive' => 2,
                            'walk' => 0,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node29 = new Node();
                            $node29->setResult(new Result([
                            'bus' => 0,
                            'drive' => 1,
                            'walk' => 0,
                            'bike' => 5,
                            'train' => 0,
                        ]));
                            $node30 = new Node();
                            $node30->setResult(new Result([
                            'bike' => 0,
                            'drive' => 2,
                            'walk' => 0,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node31 = new Node();
                            $node31->setResult(new Result([
                            'bike' => 5,
                            'drive' => 0,
                            'walk' => 0,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node32 = new Node();
                    $node32->setDecision(new Decision('maxvelocity', '>', 4.082));
                                    $node33 = new Node();
                    $node33->setDecision(new Decision('stoprate', '>', 0.126));
                                    $node34 = new Node();
                            $node34->setResult(new Result([
                            'bike' => 2,
                            'drive' => 0,
                            'walk' => 0,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node35 = new Node();
                    $node35->setDecision(new Decision('maxvelocity', '>', 44.538));
                                    $node36 = new Node();
                            $node36->setResult(new Result([
                            'bike' => 2,
                            'drive' => 0,
                            'walk' => 0,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node37 = new Node();
                    $node37->setDecision(new Decision('meanacceleration', '>', 0.476));
                                    $node38 = new Node();
                    $node38->setDecision(new Decision('maxvelocity', '>', 8.843));
                                    $node39 = new Node();
                            $node39->setResult(new Result([
                            'bike' => 0,
                            'drive' => 0,
                            'walk' => 5,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node40 = new Node();
                    $node40->setDecision(new Decision('maxvelocity', '>', 5.613));
                                    $node41 = new Node();
                            $node41->setResult(new Result([
                            'bike' => 2,
                            'drive' => 0,
                            'walk' => 1,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node42 = new Node();
                            $node42->setResult(new Result([
                            'bike' => 0,
                            'drive' => 0,
                            'walk' => 2,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node43 = new Node();
                            $node43->setResult(new Result([
                            'bike' => 0,
                            'drive' => 0,
                            'walk' => 15,
                            'bus' => 0,
                            'train' => 0,
                        ]));
                            $node44 = new Node();
                            $node44->setResult(new Result([
                            'bus' => 0,
                            'drive' => 1,
                            'walk' => 30,
                            'bike' => 0,
                            'train' => 0,
                        ]));
                
                                    $node0->setLeft($node1);
                            $node0->setRight($node32);
                                    $node1->setParent($node0);
                            $node1->setLeft($node2);
                            $node1->setRight($node11);
                                    $node2->setParent($node1);
                            $node2->setLeft($node3);
                            $node2->setRight($node4);
                                    $node3->setParent($node3);
                                                    $node4->setParent($node2);
                            $node4->setLeft($node5);
                            $node4->setRight($node10);
                                    $node5->setParent($node4);
                            $node5->setLeft($node6);
                            $node5->setRight($node9);
                                    $node6->setParent($node5);
                            $node6->setLeft($node7);
                            $node6->setRight($node8);
                                    $node7->setParent($node7);
                                                    $node8->setParent($node8);
                                                    $node9->setParent($node9);
                                                    $node10->setParent($node10);
                                                    $node11->setParent($node1);
                            $node11->setLeft($node12);
                            $node11->setRight($node17);
                                    $node12->setParent($node11);
                            $node12->setLeft($node13);
                            $node12->setRight($node16);
                                    $node13->setParent($node12);
                            $node13->setLeft($node14);
                            $node13->setRight($node15);
                                    $node14->setParent($node14);
                                                    $node15->setParent($node15);
                                                    $node16->setParent($node16);
                                                    $node17->setParent($node11);
                            $node17->setLeft($node18);
                            $node17->setRight($node19);
                                    $node18->setParent($node18);
                                                    $node19->setParent($node17);
                            $node19->setLeft($node20);
                            $node19->setRight($node31);
                                    $node20->setParent($node19);
                            $node20->setLeft($node21);
                            $node20->setRight($node22);
                                    $node21->setParent($node21);
                                                    $node22->setParent($node20);
                            $node22->setLeft($node23);
                            $node22->setRight($node24);
                                    $node23->setParent($node23);
                                                    $node24->setParent($node22);
                            $node24->setLeft($node25);
                            $node24->setRight($node26);
                                    $node25->setParent($node25);
                                                    $node26->setParent($node24);
                            $node26->setLeft($node27);
                            $node26->setRight($node30);
                                    $node27->setParent($node26);
                            $node27->setLeft($node28);
                            $node27->setRight($node29);
                                    $node28->setParent($node28);
                                                    $node29->setParent($node29);
                                                    $node30->setParent($node30);
                                                    $node31->setParent($node31);
                                                    $node32->setParent($node0);
                            $node32->setLeft($node33);
                            $node32->setRight($node44);
                                    $node33->setParent($node32);
                            $node33->setLeft($node34);
                            $node33->setRight($node35);
                                    $node34->setParent($node34);
                                                    $node35->setParent($node33);
                            $node35->setLeft($node36);
                            $node35->setRight($node37);
                                    $node36->setParent($node36);
                                                    $node37->setParent($node35);
                            $node37->setLeft($node38);
                            $node37->setRight($node43);
                                    $node38->setParent($node37);
                            $node38->setLeft($node39);
                            $node38->setRight($node40);
                                    $node39->setParent($node39);
                                                    $node40->setParent($node38);
                            $node40->setLeft($node41);
                            $node40->setRight($node42);
                                    $node41->setParent($node41);
                                                    $node42->setParent($node42);
                                                    $node43->setParent($node43);
                                                    $node44->setParent($node44);
                                
        $this->tree = new Tree($node0);
    }

    /**
    * Process values by tree
    *
    * @param array $values
    *
    * @return array
    */
    public function process(array $values)
    {
        return $this->tree->process($values);
    }
}
